<web-service>

    <display-name>Web Services Example</display-name>
    <description>Java Web Service Example</description>

    <!-- Specifies the resulting web service archive will be stored in
         ./spexample.ear -->
    <destination-path>./spexample.ear</destination-path>

    <!-- Specifies the temporary directory that web service assembly 
         tool can create temporary files. -->
    <temporary-directory>./tmp</temporary-directory>

    <!-- Specifies the web service will be accessed in the servlet context
         named "/webservices". -->
    <context>/webservices1</context>

    <!-- Specifies the web service will be stateless -->
    <stateless-stored-procedure-java-service>
        
       <jar-generation>
         <schema>scott/tiger</schema>
         <db-url>jdbc:oracle:thin:@localhost:1521:sqlj</db-url>
	 <prefix>sp.company</prefix>
         <db-pkg-name>Company</db-pkg-name>
       </jar-generation>

      <!-- Specifies the web service will be accessed in the uri named
             "statelessSP" within the servlet context. -->
       <uri>/statelessSP</uri>

       <database-JNDI-name>jdbc/OracleDS</database-JNDI-name>

    </stateless-stored-procedure-java-service>


  <wsdl-gen>
    <wsdl-dir>wsdl</wsdl-dir>
    <!--force 'true'  will write over existing wsdl -->
    <option name="force">true</option>
    <!-- change this to point to your soap servers http listener -->
    <option name="httpServerURL">http://localhost:8888</option>
  </wsdl-gen>

  <proxy-gen>
    <proxy-dir>proxy</proxy-dir>
    <!-- include-source 'true'  will create an additional jar with only the proxy source-->
    <option name="include-source">true</option>
  </proxy-gen>


</web-service>


